#!/bin/bash

# Script test cho Priority Search v·ªõi th·ª© t·ª± ∆∞u ti√™n: name ‚Üí discount ‚Üí distance
# Ki·ªÉm tra th·ª© t·ª± ∆∞u ti√™n v√† hi·ªáu su·∫•t c·ªßa native query m·ªõi

echo "=== TEST PRIORITY SEARCH: NAME ‚Üí DISCOUNT ‚Üí DISTANCE ==="
echo ""

# C·∫•u h√¨nh
BASE_URL="http://localhost:8080"
LAT="10.762622"  # T·ªça ƒë·ªô H·ªì Ch√≠ Minh
LON="106.660172"

echo "üìç T·ªça ƒë·ªô test: $LAT, $LON"
echo ""

# Test 1: T√¨m ki·∫øm theo t√™n (∆∞u ti√™n cao nh·∫•t)
echo "üîç Test 1: T√¨m ki·∫øm theo t√™n (∆∞u ti√™n cao nh·∫•t)"
echo "T√¨m ki·∫øm 'pizza' - s·∫£n ph·∫©m c√≥ t√™n match s·∫Ω ƒë∆∞·ª£c ∆∞u ti√™n cao nh·∫•t"
echo "URL: $BASE_URL/products?q=pizza&lat=$LAT&lon=$LON&page=0&size=10"
echo ""

response=$(curl -s -X GET "$BASE_URL/products?q=pizza&lat=$LAT&lon=$LON&page=0&size=10" \
  -H "Content-Type: application/json")

if echo "$response" | jq -e '.success' > /dev/null; then
    echo "K·∫øt qu·∫£ t√¨m ki·∫øm 'pizza':"
    echo "$response" | jq -r '.data.content[] | "\(.name): \(.discountPercentage)% gi·∫£m gi√°, \(.distanceKm)km"'
    echo ""
    echo "‚úÖ S·∫£n ph·∫©m c√≥ t√™n ch·ª©a 'pizza' s·∫Ω ƒë∆∞·ª£c ∆∞u ti√™n cao nh·∫•t (1000 ƒëi·ªÉm)"
else
    echo "‚ùå L·ªói: $(echo "$response" | jq -r '.message // "Unknown error"')"
fi

echo "---"
echo ""

# Test 2: T√¨m ki·∫øm kh√¥ng c√≥ t√™n, ki·ªÉm tra ∆∞u ti√™n discount
echo "üîç Test 2: T√¨m ki·∫øm kh√¥ng c√≥ t√™n, ki·ªÉm tra ∆∞u ti√™n discount"
echo "L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m - s·∫£n ph·∫©m c√≥ gi·∫£m gi√° s·∫Ω ƒë∆∞·ª£c ∆∞u ti√™n (500 ƒëi·ªÉm)"
echo "URL: $BASE_URL/products?lat=$LAT&lon=$LON&page=0&size=10"
echo ""

response=$(curl -s -X GET "$BASE_URL/products?lat=$LAT&lon=$LON&page=0&size=10" \
  -H "Content-Type: application/json")

if echo "$response" | jq -e '.success' > /dev/null; then
    echo "K·∫øt qu·∫£ t√¨m ki·∫øm (kh√¥ng c√≥ t√™n):"
    echo "$response" | jq -r '.data.content[] | "\(.name): \(.discountPercentage)% gi·∫£m gi√°, \(.distanceKm)km"'
    echo ""
    echo "‚úÖ S·∫£n ph·∫©m c√≥ gi·∫£m gi√° s·∫Ω ƒë∆∞·ª£c ∆∞u ti√™n (500 ƒëi·ªÉm)"
else
    echo "‚ùå L·ªói: $(echo "$response" | jq -r '.message // "Unknown error"')"
fi

echo "---"
echo ""

# Test 3: T√¨m ki·∫øm v·ªõi t√™n kh√¥ng t·ªìn t·∫°i, ki·ªÉm tra ∆∞u ti√™n distance
echo "üîç Test 3: T√¨m ki·∫øm v·ªõi t√™n kh√¥ng t·ªìn t·∫°i, ki·ªÉm tra ∆∞u ti√™n distance"
echo "T√¨m ki·∫øm 'xyz123' (kh√¥ng t·ªìn t·∫°i) - s·∫£n ph·∫©m g·∫ßn nh·∫•t s·∫Ω ƒë∆∞·ª£c ∆∞u ti√™n"
echo "URL: $BASE_URL/products?q=xyz123&lat=$LAT&lon=$LON&page=0&size=10"
echo ""

response=$(curl -s -X GET "$BASE_URL/products?q=xyz123&lat=$LAT&lon=$LON&page=0&size=10" \
  -H "Content-Type: application/json")

if echo "$response" | jq -e '.success' > /dev/null; then
    echo "K·∫øt qu·∫£ t√¨m ki·∫øm 'xyz123' (kh√¥ng t·ªìn t·∫°i):"
    echo "$response" | jq -r '.data.content[] | "\(.name): \(.discountPercentage)% gi·∫£m gi√°, \(.distanceKm)km"'
    echo ""
    echo "‚úÖ S·∫£n ph·∫©m g·∫ßn nh·∫•t s·∫Ω ƒë∆∞·ª£c ∆∞u ti√™n (1000 - distance_km ƒëi·ªÉm)"
else
    echo "‚ùå L·ªói: $(echo "$response" | jq -r '.message // "Unknown error"')"
fi

echo "---"
echo ""

# Test 4: So s√°nh th·ª© t·ª± ∆∞u ti√™n
echo "üîç Test 4: So s√°nh th·ª© t·ª± ∆∞u ti√™n"
echo "L·∫•y 20 s·∫£n ph·∫©m v√† ki·ªÉm tra th·ª© t·ª± ∆∞u ti√™n"
echo "URL: $BASE_URL/products?lat=$LAT&lon=$LON&page=0&size=20"
echo ""

response=$(curl -s -X GET "$BASE_URL/products?lat=$LAT&lon=$LON&page=0&size=20" \
  -H "Content-Type: application/json")

if echo "$response" | jq -e '.success' > /dev/null; then
    echo "Th·ª© t·ª± ∆∞u ti√™n (20 s·∫£n ph·∫©m ƒë·∫ßu ti√™n):"
    echo "T√™n s·∫£n ph·∫©m | Gi·∫£m gi√° | Kho·∫£ng c√°ch | ƒêi·ªÉm ∆∞u ti√™n"
    echo "-------------|----------|-------------|-------------"
    
    # L·∫•y d·ªØ li·ªáu v√† t√≠nh ƒëi·ªÉm ∆∞u ti√™n
    echo "$response" | jq -r '.data.content[] | "\(.name) | \(.discountPercentage)% | \(.distanceKm)km | \(if .name | test("pizza"; "i") then 1000 else 0 end) + \(.discountPercentage) + \(if .distanceKm then (1000 - .distanceKm) else 0 end)"'
    
    echo ""
    echo "‚úÖ Th·ª© t·ª± ∆∞u ti√™n:"
    echo "   1. T√™n match (1000 ƒëi·ªÉm)"
    echo "   2. C√≥ gi·∫£m gi√° (500 ƒëi·ªÉm)"  
    echo "   3. Kho·∫£ng c√°ch g·∫ßn (1000 - distance_km ƒëi·ªÉm)"
else
    echo "‚ùå L·ªói: $(echo "$response" | jq -r '.message // "Unknown error"')"
fi

echo "---"
echo ""

# Test 5: Test hi·ªáu su·∫•t
echo "üîç Test 5: Test hi·ªáu su·∫•t native query"
echo "Th·ª±c hi·ªán 5 l·∫ßn g·ªçi API v√† ƒëo th·ªùi gian trung b√¨nh..."
echo ""

total_time=0
for i in {1..5}; do
    echo "L·∫ßn $i/5..."
    start_time=$(date +%s%3N)
    
    response=$(curl -s -X GET "$BASE_URL/products?lat=$LAT&lon=$LON&page=0&size=10" \
      -H "Content-Type: application/json")
    
    end_time=$(date +%s%3N)
    duration=$((end_time - start_time))
    total_time=$((total_time + duration))
    
    echo "Th·ªùi gian: ${duration}ms"
    
    # Ki·ªÉm tra response c√≥ h·ª£p l·ªá kh√¥ng
    success=$(echo "$response" | jq -r '.success // false')
    if [ "$success" = "true" ]; then
        count=$(echo "$response" | jq -r '.data.content | length')
        echo "S·ªë s·∫£n ph·∫©m t√¨m th·∫•y: $count"
    else
        echo "L·ªói: $(echo "$response" | jq -r '.message // "Unknown error"')"
    fi
    
    echo ""
    sleep 1
done

avg_time=$((total_time / 5))
echo "‚è±Ô∏è  Th·ªùi gian trung b√¨nh: ${avg_time}ms"
echo ""

# Test 6: Test v·ªõi c√°c tham s·ªë kh√°c nhau
echo "üîç Test 6: Test v·ªõi c√°c tham s·ªë kh√°c nhau"

# Test v·ªõi minPrice
echo "Test v·ªõi minPrice=50000:"
curl -s -X GET "$BASE_URL/products?lat=$LAT&lon=$LON&minPrice=50000&page=0&size=5" \
  -H "Content-Type: application/json" | jq -r '.data.content[] | "\(.name): \(.price) VND"'

echo ""

# Test v·ªõi maxPrice
echo "Test v·ªõi maxPrice=100000:"
curl -s -X GET "$BASE_URL/products?lat=$LAT&lon=$LON&maxPrice=100000&page=0&size=5" \
  -H "Content-Type: application/json" | jq -r '.data.content[] | "\(.name): \(.price) VND"'

echo ""

# Test v·ªõi maxDistanceKm
echo "Test v·ªõi maxDistanceKm=5:"
curl -s -X GET "$BASE_URL/products?lat=$LAT&lon=$LON&maxDistanceKm=5&page=0&size=5" \
  -H "Content-Type: application/json" | jq -r '.data.content[] | "\(.name): \(.distanceKm)km"'

echo ""

echo "=== K·∫æT TH√öC TEST PRIORITY SEARCH ==="
